<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=GBK">
<title>单位管理</title>
    <link rel="stylesheet" type="text/css" href="/newver/resources/css/ext-all.css" /> 
        <style type="text/css">

        .icon-grid {
            background-image:url(/newver/resources/themes/images/share/grid.png) !important;
        }
        .add {
            background-image:url(/newver/resources/themes/images/share/add.gif) !important;
        }
        .option {
            background-image:url(/newver/resources/themes/images/share/plugin.gif) !important;
        }
        .remove {
            background-image:url(/newver/resources/themes/images/share/delete.gif) !important;
        }
        .exp {
            background-image:url(/newver/resources/themes/images/share/application_go.png) !important;
        }
    </style>
    
    
      
    <script type="text/javascript" src="/newver/resources/js/ext-all.js"></script>
    
  <script>  
    
Ext.Loader.setConfig({enabled: true});
Ext.Loader.setPath('Ext.ux', '/newver/ux/');
Ext.require([
    'Ext.form.*',
    'Ext.window.*',
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.util.*',
    'Ext.toolbar.Paging',
    'Ext.ux.PreviewPlugin',
    'Ext.ModelManager',
    'Ext.tip.QuickTipManager'
]);






Ext.onReady(function(){

    var BaseInfoGroup = {
        xtype: 'fieldset',
        title: '基本信息',
        layout: 'anchor',
        defaults: {
            anchor: '100%',
            labelStyle: 'padding-left:4px;'
        },
        collapsible: true,
        items: [{
            xtype: 'textfield',
            name: 'username',
            fieldLabel: '单位编码'
        },{
            xtype: 'textfield',
            name: 'dispanme',
            value:'fffff',
            fieldLabel: '单位名称'
        },{
            xtype: 'radiogroup',
            fieldLabel: '单位类别',
            cls: 'x-check-group-alt',
            columns: 6,
            items: [
                {boxLabel: '酒店宾馆', name: 'rb-horiz-1', inputValue: 1},
                {boxLabel: '图书馆', name: 'rb-horiz-1', inputValue: 2, checked: true},
                {boxLabel: '学校', name: 'rb-horiz-1', inputValue: 3},
                {boxLabel: '娱乐场所', name: 'rb-horiz-1', inputValue: 1, },
                {boxLabel: '一般企业', name: 'rb-horiz-1', inputValue: 2},
                {boxLabel: '其它', name: 'rb-horiz-1', inputValue: 2}
            ]
        }]
    };



    var individual = {
        xtype: 'container',
        layout: 'hbox',
        margin: '0 0 10',
        items: [{
            xtype: 'fieldset',
            flex: 1,
            title: 'Individual Checkboxes',
            defaultType: 'checkbox', // each item will be a checkbox
            layout: 'anchor',
            defaults: {
                anchor: '100%',
                hideEmptyLabel: false
            },
            items: [{
                xtype: 'textfield',
                name: 'txt-test1',
                fieldLabel: 'Alignment Test'
            }, {
                fieldLabel: 'Favorite Animals',
                boxLabel: 'Dog',
                name: 'fav-animal-dog',
                inputValue: 'dog'
            }, {
                boxLabel: 'Cat',
                name: 'fav-animal-cat',
                inputValue: 'cat'
            }, {
                checked: true,
                boxLabel: 'Monkey',
                name: 'fav-animal-monkey',
                inputValue: 'monkey'
            }]
        }, {
            xtype: 'component',
            width: 10
        }, {
            xtype: 'fieldset',
            flex: 1,
            title: 'Individual Radios',
            defaultType: 'radio', // each item will be a radio button
            layout: 'anchor',
            defaults: {
                anchor: '100%',
                hideEmptyLabel: false
            },
            items: [{
                xtype: 'textfield',
                name: 'txt-test2',
                fieldLabel: 'Alignment Test'
            }, {
                checked: true,
                fieldLabel: 'Favorite Color',
                boxLabel: 'Red',
                name: 'fav-color',
                inputValue: 'red'
            }, {
                boxLabel: 'Blue',
                name: 'fav-color',
                inputValue: 'blue'
            }, {
                boxLabel: 'Green',
                name: 'fav-color',
                inputValue: 'green'
            }]
        }, {
            xtype: 'component',
            width: 5
        }
        
        
        ]
    };







   Ext.define('State', {
        extend: 'Ext.data.Model',
        fields: [
            {type: 'string', name: 'abbr'},
            {type: 'string', name: 'name'},
            {type: 'string', name: 'slogan'}
        ]
    });
    // The data for all states
    var states = [
        {"abbr":"AL","name":"Alabama","slogan":"The Heart of Dixie"},
        {"abbr":"AK","name":"Alaska","slogan":"The Land of the Midnight Sun"},
        {"abbr":"AZ","name":"Arizona","slogan":"The Grand Canyon State"},
        {"abbr":"AR","name":"Arkansas","slogan":"The Natural State"},
        {"abbr":"CA","name":"California","slogan":"The Golden State"},
        {"abbr":"CO","name":"Colorado","slogan":"The Mountain State"},
        {"abbr":"CT","name":"Connecticut","slogan":"The Constitution State"},
        {"abbr":"DE","name":"Delaware","slogan":"The First State"},
        {"abbr":"DC","name":"District of Columbia","slogan":"The Nation's Capital"},
        {"abbr":"FL","name":"Florida","slogan":"The Sunshine State"},
        {"abbr":"GA","name":"Georgia","slogan":"The Peach State"},
        {"abbr":"HI","name":"Hawaii","slogan":"The Aloha State"},
        {"abbr":"ID","name":"Idaho","slogan":"Famous Potatoes"},
        {"abbr":"IL","name":"Illinois","slogan":"The Prairie State"},
        {"abbr":"IN","name":"Indiana","slogan":"The Hospitality State"},
        {"abbr":"IA","name":"Iowa","slogan":"The Corn State"},
        {"abbr":"KS","name":"Kansas","slogan":"The Sunflower State"},
        {"abbr":"KY","name":"Kentucky","slogan":"The Bluegrass State"},
        {"abbr":"LA","name":"Louisiana","slogan":"The Bayou State"},
        {"abbr":"ME","name":"Maine","slogan":"The Pine Tree State"},
        {"abbr":"MD","name":"Maryland","slogan":"Chesapeake State"},
        {"abbr":"MA","name":"Massachusetts","slogan":"The Spirit of America"},
        {"abbr":"MI","name":"Michigan","slogan":"Great Lakes State"},
        {"abbr":"MN","name":"Minnesota","slogan":"North Star State"},
        {"abbr":"MS","name":"Mississippi","slogan":"Magnolia State"},
        {"abbr":"MO","name":"Missouri","slogan":"Show Me State"},
        {"abbr":"MT","name":"Montana","slogan":"Big Sky Country"},
        {"abbr":"NE","name":"Nebraska","slogan":"Beef State"},
        {"abbr":"NV","name":"Nevada","slogan":"Silver State"},
        {"abbr":"NH","name":"New Hampshire","slogan":"Granite State"},
        {"abbr":"NJ","name":"New Jersey","slogan":"Garden State"},
        {"abbr":"NM","name":"New Mexico","slogan":"Land of Enchantment"},
        {"abbr":"NY","name":"New York","slogan":"Empire State"},
        {"abbr":"NC","name":"North Carolina","slogan":"First in Freedom"},
        {"abbr":"ND","name":"North Dakota","slogan":"Peace Garden State"},
        {"abbr":"OH","name":"Ohio","slogan":"The Heart of it All"},
        {"abbr":"OK","name":"Oklahoma","slogan":"Oklahoma is OK"},
        {"abbr":"OR","name":"Oregon","slogan":"Pacific Wonderland"},
        {"abbr":"PA","name":"Pennsylvania","slogan":"Keystone State"},
        {"abbr":"RI","name":"Rhode Island","slogan":"Ocean State"},
        {"abbr":"SC","name":"South Carolina","slogan":"Nothing Could be Finer"},
        {"abbr":"SD","name":"South Dakota","slogan":"Great Faces, Great Places"},
        {"abbr":"TN","name":"Tennessee","slogan":"Volunteer State"},
        {"abbr":"TX","name":"Texas","slogan":"Lone Star State"},
        {"abbr":"UT","name":"Utah","slogan":"Salt Lake State"},
        {"abbr":"VT","name":"Vermont","slogan":"Green Mountain State"},
        {"abbr":"VA","name":"Virginia","slogan":"Mother of States"},
        {"abbr":"WA","name":"Washington","slogan":"Green Tree State"},
        {"abbr":"WV","name":"West Virginia","slogan":"Mountain State"},
        {"abbr":"WI","name":"Wisconsin","slogan":"America's Dairyland"},
        {"abbr":"WY","name":"Wyoming","slogan":"Like No Place on Earth"}
    ];

    // The data store holding the states; shared by each of the ComboBox examples below
    var store1 = Ext.create('Ext.data.Store', {
        model: 'State',
        data: states
    });

      // Simple ComboBox using the data store
    var simpleCombo = Ext.create('Ext.form.field.ComboBox', {
        fieldLabel: 'Select a single state',
        displayField: 'name1',
        width: 320,
        labelWidth: 130,
        store: store1,
        queryMode: 'local',
        typeAhead: true
    });

 var htmlvar='<iframe src="/pronline/Msg?FunName@ncsWebVidSearch" scrolling="no" name="moduleIframe" frameborder="no" style="width:100%;height:100%;"></iframe>';

    var handleAction = function(action){
       if(action=='add'){
       var win = new Ext.Window ({
                             title:"增加单位",
                             x:0,
                             y:0,
                             width:600,
                             height:600,
                             bodyPadding: 10,
                             modal:false,
                             resizable:true,
                             draggable:false,
 //     html:htmlvar,
      items:
      [                      
          BaseInfoGroup,
         individual  
     ]
                                                        
         }
        )
        win.show();

       }
    };


    Ext.tip.QuickTipManager.init();

    Ext.define('EimData', {
        extend: 'Ext.data.Model',
        fields: [
            'username', 'dispname', 'ip', 'endnum', 'onuser','status','ssxx','userid','version'
        ],
        idProperty: 'userid'
    });

    // create the Data Store
    var store = Ext.create('Ext.data.Store', {
        pageSize: 40,
        model: 'EimData',
        remoteSort: true,
        proxy: {
            type: 'ajax',
            url: '/pronline/Msg?FunName@ncsWebClientSearch&plate@v4/ncs_corp_list.htm',
            reader: {
                type:'json',
                root: 'eimdata',
                totalProperty: 'totalCount'
            },
            // sends single sort as multi parameter            
            simpleSortMode: true
        },
        sorters: [{
            property: 'userid',
            direction: 'DESC'
        }]
    });

    // pluggable renders
    function editcorp(value,p,record){
 //   alert(record.getId());
            return Ext.String.format(
            '<b><a href="http://sencha.com/forum/showthread.php?" target="_self">{0}</a></b>',
            "修改" );
    
    
    }
    function renderTopic(value, p, record) {
        return Ext.String.format(
            '<b><a href="http://sencha.com/forum/showthread.php?t={2}" target="_blank">{0}</a></b><a href="http://sencha.com/forum/forumdisplay.php?f={3}" target="_blank">{1} Forum</a>',
            value,
            record.data.forumtitle,
            record.getId(),
            record.data.forumid
        );
    }

    function renderLast(value, p, r) {
        return Ext.String.format('{0}<br/>by {1}', Ext.Date.dateFormat(value, 'M j, Y, g:i a'), r.data['lastposter']);
    }


    var pluginExpanded = true;
    
    var sm = Ext.create('Ext.selection.CheckboxModel');
    
    var grid = Ext.create('Ext.grid.Panel', {
        width: 830,
        height: 710,
        title: '联网单位管理',
        iconCls: 'icon-grid',
        store: store,
        selModel: sm,
        frame:true,
//        disableSelection: true,
 //       loadMask: true,
//        viewConfig: {
//            id: 'gv',
//            trackOver: false,
//            stripeRows: false,
//            plugins: [{
 //               ptype: 'preview',
//                bodyField: 'excerpt',
//                expanded: true,
//                pluginId: 'preview'
//            }]
//        },
        // grid columns
        columns:[{
            // id assigned so we can apply custom css (e.g. .x-grid-cell-topic b { color:#333 })
            // TODO: This poses an issue in subclasses of Grid now because Headers are now Components
            // therefore the id will be registered in the ComponentManager and conflict. Need a way to
            // add additional CSS classes to the rendered cells.
            id: 'userid',
            text: "单位编码",
            dataIndex: 'username',
            hidden: true,
            width: 100,
            sortable: true
        },{
            text: "单位名称",
            dataIndex: 'dispname',            
            flex: 1,
            sortable: true
        },{
            text: "IP地址",
            dataIndex: 'ip',
            width: 110,
            align: 'left',
            sortable: true
        }
        ,{
            text: "用户数",
            dataIndex: 'endnum',
            width: 70,
            align: 'right',
            sortable: true
        },
        {
            text: "在线用户",
            dataIndex: 'onuser',
            width: 70,
            align: 'right',
            sortable: true
        },
        {
            text: "状态",
            dataIndex: 'status',
            width: 70,
            align: 'center',
            sortable: true
        },
        {
            text: "实时信息",
            dataIndex: 'ssxx',
            width: 70,
            align: 'center',
            sortable: false
        } ,
        {
            text: "IP轨迹",
            dataIndex: 'userid',
            width: 70,
            align: 'center',
            sortable: false
        },
        {
            text: "编辑",
            dataIndex: 'userid',
            width: 70,
            align: 'center',
            sortable: false,
            renderer: editcorp
        },
        {
            text: "版本号",
            dataIndex: 'version',
            width: 70,
            align: 'center',
            sortable: true
        }
        ],
        
        columnLines: true,
              
        // paging bar on the bottom
        tbar: Ext.create('Ext.PagingToolbar', {
            store: store,
//             layout: {
//                pack: 'right'
//            },
            displayInfo: true,
            displayMsg: '显示{0} - {1}条记录 共{2}条记录',
            emptyMsg: "No topics to display",
            
                           
            items: [
           '->', 
            {
                text:'增加',
                iconCls:'add',
                 handler: Ext.Function.pass(handleAction, 'add')
            }, '-', {
                text:'删除',
                iconCls:'remove'
            },'-',{
                text:'查询',
                anchor: 'right',
                iconCls:'option'
            },'-',{
                text:'导出',
                iconCls:'exp'
            }]
       
            
            
            
            
            
            
            
            
            
//            items:[
//               '-', {
//                text: 'Show Preview',
//                pressed: pluginExpanded,
 //               enableToggle: true,
//                toggleHandler: function(btn, pressed) {
//                    var preview = Ext.getCmp('gv').getPlugin('preview');
//                    preview.toggleExpanded(pressed);
//                }
 //           }]
        }),
        renderTo: 'grid-example'
    });

    // trigger the data store load
     store.loadPage(1);

//      store.load({params: {CurPg: 11 }});
});


</script>
    
    
</head>
<body>
    <div id="grid-example"></div>
</body>
</html>
