 
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=gbk" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <title>轨迹图</title>
     <link rel="stylesheet" type="text/css" href="/newver/resources/css/ext-all.css">
    <script type="text/javascript" src="/newver/resources/js/ext-all.js"></script>

    <style type="text/css">	
    .accept {
            background-image:url(/newver/resources/themes/images/share/accept.png) !important;
    }
    .exp {
            background-image:url(/newver/resources/themes/images/share/exportimg.png) !important;
    }
		body{
			margin:0;
			height:100%;
			width:100%;
			position:absolute;
		}
		#mapleft{
			position: absolute;
			top:0;
			width:100%;
			left:0;			
			bottom:0;
		}
		#mapContainer{
			position: absolute;
			top:40px;		
		  left:0;
		  right:0;
			bottom:40px;
		}
		#tip{
			height:45px;
			background-color:#fff;
			padding-left:10px;
			padding-right:10px;
			border:1px solid #969696;
			position:absolute;
			font-size:12px;
			right:10px;
			bottom:30px;
			border-radius:3px;
			line-height:45px;
		}
		
		#tip input[type='button']{
			height:28px;
			line-height:28px;
			outline:none;
			text-align:center;
			padding-left:5px;
			padding-right:5px;
			color:#FFF;
			background-color:#0D9BF2;
			border:0;
			border-radius: 3px;
			margin-top:8px;
			margin-left:5px;
			cursor:pointer;
			margin-right:10px;
		}
		
		.markspan{
			display: block;
			height: 40px;
			width:180px;
			text-align:center;
			padding-left:10px;
			padding-right:10px;
			line-height:40px;
			background-color:#fff;
			border:1px solid #ccc;
			color:#FF6BBB;
			font-size:12px;
			border-radius:3px;
		}
		
    </style>	
</head>
<script>

Ext.Loader.setConfig({enabled: true});
Ext.Loader.setPath('Ext.ux', '/newver/ux/');
Ext.require([
    'Ext.form.*',
    'Ext.window.*',
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.util.*',
    'Ext.window.MessageBox',
    'Ext.toolbar.Paging',
    'Ext.ux.PreviewPlugin',
    'Ext.tree.*',
    'Ext.ux.*'
 
]);
	var store;
	
	Ext.onReady(function(){
    Ext.tip.QuickTipManager.init();
    Ext.define('EimData', {
        extend: 'Ext.data.Model',
        fields: [
            'apname', 'sdate', 'longitude', 'latitude'
        ],
        idProperty: 'sdate'
    });
   
  
   
    
       store = Ext.create('Ext.data.Store', {
        pageSize: 40,
        model: 'EimData',
        remoteSort: true,
        proxy: {
            type: 'ajax',
            url: '/pronline/Msg?FunName@ncsScanMacGj',
//              url:'/data/ncs_pelope_gj.htm',
            reader: {
                type:'json',
                root: 'eimdata',
                totalProperty: 'totalCount'
            },         
            simpleSortMode: true
        },
        sorters: [{
      //      property: 'id',
     //       direction: 'DESC'
        }]
    });
    
     var placeCombo = Ext.create('Ext.form.field.ComboBox', {
     	  
        labelWidth: 60,
        width:75,
        valueField:'value',
        displayField: 'name',
        id:'places',
        name : 'places',      
        value:'0',
        allowBlank: true,
        forceSelection: false,
                                    store: Ext.create('Ext.data.Store', {
                                    fields : ['name', 'value'],
                                    data   : [
                                        {name : '终端',   value: '0'},
                                        {name : '采集设备',   value: '1'},
                                        {name : '场所',   value: '2'}
                                                                
                                    ]
                                })
                                ,
        queryMode: 'local',
        typeAhead: true,
                listeners: {
                      'change':function(){
                      
                        }
                    }
        });
         var timeCombo = Ext.create('Ext.form.field.ComboBox', {
        labelWidth: 60,
        width:75,
        valueField:'value',
        displayField: 'name',
        id:'times',
        name : 'times',      
        value:'0',
        allowBlank: true,
        forceSelection: false,
                                    store: Ext.create('Ext.data.Store', {
                                    fields : ['name', 'value'],
                                    data   : [
                                        {name : '今天',   value: '0'},
                                        {name : '前三天',   value: '1'},
                                        {name : '前七天',   value: '2'}
                                                                
                                    ]
                                })
                                ,
        queryMode: 'local',
        typeAhead: true,
                listeners: {
                      'change':function(){
                      
                        }
                    }
        });

        var tbar = Ext.create('Ext.Toolbar',{
            
            items:[
               placeCombo,'  ',
               timeCombo,'  ',
                {
                    xtype:'textfield',
                    id:'keyword',
                    width:180,
                    name:'keyword',
                    style:'color:#7aa7d5',             
                    emptyText:'MAC地址',
                    enableKeyEvents:true,
                    listeners:{
                        'focus':function(){
                        },           
                        'keydown' : function(i,e){
                             var aae=e.getKey() ; 
                             if(aae==13){
                             }
                         }
                    }
                },'  ',
                {
                    text:'查询',
                    iconCls:'accept',
                    handler:function()
                    {
                    	var times = Ext.getCmp('times').value;
                    	
                    	var style = Ext.getCmp('places').value;
                    	
                    	var keywords = Ext.getCmp('keyword').value;
                    	var myform = document.getElementById('form1');
                    	alert(myform);
                    	myform.style.value=style;
                    	myform.time.value=times;
                    	myform.macadress.value = keywords;
                    	alert(myform.style.value);
                    	myform.submit();
                    	
                    }
                },
                '-',
               
             {
			     	 	text:'导出',
			     	 	itemId: 'expbutton',
			     	 	iconCls:'exp',
			     	 	action:'exp'
			     	 },
                {xtype:'label', html:'<span id="titledx"></span>'}
            ]
        });

       var panel = Ext.create('Ext.form.FormPanel', {
        title: '',
        margins: '0 0 0 0',
        id:'myform',
        name:'myform',
        autoScroll: false,
        renderTo: 'mapleft',
        frame: true,
        tbar:tbar
 
    });

     
    
 
});
	
	
	
	
	</script>
<body>
	<div id="mapleft"></div>
	<div id="mapContainer"></div>
	<script type="text/javascript" src="http://webapi.amap.com/maps?v=1.3&key=9ac2d10856d92017d2d8d82ce004a820"></script>
	
	<script type="text/javascript">
		
	
		//初始化地图对象，加载地图
	
var map = new AMap.Map('mapContainer',{
			resizeEnable: true,
			//二维地图显示视口
	        //设置地图中心点
	        //设置地图显示的缩放级别
			view: new AMap.View2D({
				center: new AMap.LngLat(121.467151,31.228183),
				zoom: 13
			})
		});	
		map.setFitView(); 
		/*var sicon = new AMap.Icon({
				image: "http://cache.amap.com/lbs/static/jsdemo002.png",
				size:new AMap.Size(44,44),
				imageOffset: new AMap.Pixel(-334, -180)
			});
			var eicon = new AMap.Icon({
				image: "http://cache.amap.com/lbs/static/jsdemo002.png",
				size:new AMap.Size(44,44),
				imageOffset: new AMap.Pixel(-334, -134)
			});
		var marker = new AMap.Marker({				  
				icon:sicon,
				position:new AMap.LngLat(116.368904 ,39.913423)
			});
			marker.setMap(map);  //在地图上添加点    
			marker = new AMap.Marker({				  
				icon:"http://webapi.amap.com/images/marker_sprite.png",
				position:new AMap.LngLat(116.382122,39.901176)
			});
			marker.setMap(map);  //在地图上添加点            
   
    marker = new AMap.Marker({				  
				icon:"http://webapi.amap.com/images/marker_sprite.png",
				position:new AMap.LngLat(116.387271,39.912501)
			});
			marker.setMap(map);  //在地图上添加点            
  
    marker = new AMap.Marker({				  
				icon:eicon,
				position:new AMap.LngLat(116.398258,39.904600)
			});
			marker.setMap(map);  //在地图上添加点  
			var str = '单位去过';          
   marker.setTitle(str); */
  
    


function addMarker(sname,sdate,longitude,latitude, currenti, maxi){ 
 var iconstr;
  if(currenti ==1)
  iconstr = '/newver/resources/themes/images/map/start.png';
  else if( currenti == maxi)
  	iconstr = '/newver/resources/themes/images/map/end.png';
  	else
  		iconstr = '/newver/resources/themes/images/map/pass.png';
	var marker = new AMap.Marker({                  
  map:map, //将点添加到地图                  
  position:new AMap.LngLat(longitude,latitude),    
              
  icon:iconstr,//marker图标，直接传递地址url                  
  offset:new AMap.Pixel(-20,-42) //相对于基点的位置   
  }); 
  var info = [];  
  var dw='单位名称:'+sname;
  var sj='光顾时间:'+sdate+'';               
	info.push(dw); 
	info.push('<br>'); 
	info.push('<br>');               
	info.push(sj);                  
 
  var temp=sdate+'到过'+sname;
 marker.setTitle(temp); 
 
 
	              
	var inforWindow = new AMap.InfoWindow({                  
	  offset:new AMap.Pixel(0,-23),                  
	  content:info.join("")                  
	});                  
	AMap.event.addListener(marker,"click",function(e){                  
	  inforWindow.open(map,marker.getPosition());      
                 
    });    
	
	 markers.push(marker);
 
	}
var markers= [];
for(i=0;i<markers.length;i++){
     		markers[i].setMap(null);
     	}
markers= [];
var arr = new Array();//经纬度坐标数组 
addMarker('apname','sdate',116.368904 ,39.913423,1,4);  
addMarker('apname','sdate',116.382122,39.901176,2,4); 
addMarker('apname','sdate',116.387271,39.912501,3,4); 
addMarker('apname','sdate',116.398258,39.904600,4,4);                 
arr.push(new AMap.LngLat(116.368904 ,39.913423));                   
arr.push(new AMap.LngLat(116.382122,39.901176));                   
arr.push(new AMap.LngLat(116.387271,39.912501));                   
arr.push(new AMap.LngLat(116.398258,39.904600));  
                 
var polyline = new AMap.Polyline({                   
  map:map,                 
  path:arr,                   
  strokeColor:"blue",                   
  strokeOpacity:0.4,                   
  strokeWeight:3                  
});                   
              
map.setFitView();  
            
     /*   map.plugin('AMap.PlaceSearchLayer', function (){
            var searchLayer = new AMap.PlaceSearchLayer({
                keywords : '家乐福'
            });
            searchLayer.setMap(map);
            //搜索图层查询
            AMap.event.addListener(searchLayer, 'complete', function(data){
                if(data.type === 'complete'){
                    AMap.event.addListener(searchLayer, 'click',function(data){
                        var info = [];
                        info.push('<h3><font color="#3366FF">' + data.content[0].name + '</font></h3><hr />');
                        //添加信息的函数
                        function addInfo(info, callback){
                            map.plugin('AMap.PlaceSearch', function(){
                                var ms = new AMap.PlaceSearch({extensions: 'all'});
                                ms.getDetails(data.content[0].id);
                                AMap.event.addListener(ms, 'complete', function(data){
                                    if(data['poiList']['pois'].length){

                                        info.push('<div>地址：' + data.poiList['pois'][0].address + '</div>');
                                        info.push('<div>类型：' + data.poiList['pois'][0].type + '</div>');
                                    }
                                    return callback(info);
                                });
                            });
                        }

                        addInfo(info, function(arr){
                            var infoWin = new AMap.InfoWindow({
                                offset: new AMap.Pixel(0, -2),
                                content: arr.join(''),
                                closeWhenClickMap: true
                            });

                            infoWin.open(map, data.lnglat);
                        });

                    });
                }
            });
            //添加mouseover监听
            AMap.event.addListener(searchLayer, 'mouseover',function(poi){
                //清除marker
                if(tipMarker){
                    tipMarker.setMap(null);
                }
                //绘制tip
                var position = poi.lnglat;
                var name = poi.content[0].name;
                var controlUI = document.createElement("DIV");
                controlUI.style.width = 15*name.length + 'px';
                controlUI.style.lineHeight = '25px';
                controlUI.style.height = '25px';
                controlUI.style.backgroundColor = '#fff';
                controlUI.style.borderRadius = '5px';
                controlUI.style.boxShadow = ' 0 3px 14px rgba(0,0,0,.5)';
                controlUI.style.textAlign = 'center';
                controlUI.style.zIndex = '300';
                controlUI.innerHTML = name;
                tipMarker = new AMap.Marker({
                    position: position,
                    map: map,
                    content: controlUI
                });
            });
            //鼠标不在热点上移除tip
            AMap.event.addListener(searchLayer, 'mouseout',function(){
                if(tipMarker){
                    tipMarker.setMap(null);
                }
            });

        });*/
		 
		  
	</script>
	
<form name="form1" id="form1" action="/pronline/Msg">
        <input type="hidden" name="FunName" value="dm_track">
        <input type="hidden" name="style" value="">
        <input type="hidden" name="time" value="">
        <input type="hidden" name="macadress" value="">
     
	</form>
</body >
</html>						
 

