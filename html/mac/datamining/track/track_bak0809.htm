 
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=gbk" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <title>轨迹图</title>
     <link rel="stylesheet" type="text/css" href="/newver/resources/css/ext-all.css">
    <script type="text/javascript" src="/newver/resources/js/ext-all.js"></script>

    <style type="text/css">	
    .accept {
            background-image:url(/newver/resources/themes/images/share/accept.png) !important;
    }
    .exp {
            background-image:url(/newver/resources/themes/images/share/exportimg.png) !important;
    }
		body{
			margin:0;
			height:100%;
			width:100%;
			position:absolute;
		}
		#mapleft{
			position: absolute;
			top:0;
			width:100%;
			left:0;			
			bottom:0;
		}
		#mapContainer{
			position: absolute;
			top:40px;		
		  left:0;
		  right:0;
			bottom:40px;
		}
		#tip{
			height:45px;
			background-color:#fff;
			padding-left:10px;
			padding-right:10px;
			border:1px solid #969696;
			position:absolute;
			font-size:12px;
			right:10px;
			bottom:30px;
			border-radius:3px;
			line-height:45px;
		}
		
		#tip input[type='button']{
			height:28px;
			line-height:28px;
			outline:none;
			text-align:center;
			padding-left:5px;
			padding-right:5px;
			color:#FFF;
			background-color:#0D9BF2;
			border:0;
			border-radius: 3px;
			margin-top:8px;
			margin-left:5px;
			cursor:pointer;
			margin-right:10px;
		}
		
		.markspan{
			display: block;
			height: 40px;
			width:180px;
			text-align:center;
			padding-left:10px;
			padding-right:10px;
			line-height:40px;
			background-color:#fff;
			border:1px solid #ccc;
			color:#FF6BBB;
			font-size:12px;
			border-radius:3px;
		}
		
    </style>	
</head>
<script>

Ext.Loader.setConfig({enabled: true});
Ext.Loader.setPath('Ext.ux', '/newver/ux/');
Ext.require([
    'Ext.form.*',
    'Ext.window.*',
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.util.*',
    'Ext.window.MessageBox',
    'Ext.toolbar.Paging',
    'Ext.ux.PreviewPlugin',
    'Ext.tree.*',
    'Ext.ux.*'
 
]);
var flag=0;
var markers=[];
var polyline;
	var store;
	 var sssmarker;
	
  function addMarker(sname,saddress,longitude,latitude, currenti, maxi){ 
 var iconstr;
  if(currenti ==0)
  iconstr = '/newver/resources/themes/images/map/start.png';
  else if( currenti == maxi-1)
  	iconstr = '/newver/resources/themes/images/map/end.png';
  	else
  		iconstr = '/newver/resources/themes/images/map/past.png';
	var marker = new AMap.Marker({                  
  map:map, //将点添加到地图                  
  position:new AMap.LngLat(longitude,latitude),    
              
  icon:iconstr,//marker图标，直接传递地址url                  
  offset:new AMap.Pixel(-20,-42) //相对于基点的位置   
  }); 
 
	              
	AMap.event.addListener(marker,"click",function(e){                  
	  
  var t = maxi -1;
     var poiinfo = "<table style='width:270px;cursor:pointer;'>";
		    for(var j=1;j<maxi;j++){
		        var color = j % 2 === 0 ? '#fff' : '#eee';
		        poiinfo += "<tr  style='background-color:" 
		         + color + "; margin:0; padding:0;'><td>" + 
		         "</td><td><img src='/newver/resources/themes/images/map/arrow.png'/></td><td>" 
		         + dw1 + "</td></tr>";
		    }
		    poiinfo += "</table>";
		   
		    resultStr = "<div style=\"font-size: 12px;background-color:#D6D6D6;padding:0px 0 4px 2px; border-bottom:1px solid #C1FFC1;\">"+"<table><tr><td><b></b>："+  +"</td><td align='right'>"+t+"条数据</td></tr></table>"+ "<hr/><b>流动信息</b>：<br/>" + poiinfo +"</div>";        
	var inforWindow = new AMap.InfoWindow({                  
	  offset:new AMap.Pixel(0,-23),                  
	  content:resultStr                  
	});       
	 //inforWindow.open(map,marker.getPosition());      
                 
    });    
	
	 markers.push(marker);
 
	}

	function reflash(){
	   
	   var mytime = Ext.getCmp('times').value;
	   var mac = Ext.getCmp('keyword').value;
	   var styles =Ext.getCmp('places').value;

	   store.load({params:{mac:mac, time_flag:mytime, styles:styles},
     callback:function(records, options, success){
     	var maxlong,maxlat,minlong,minlat;
     	maxlong=0;maxlat=0;minlong=0;minlat=0;
   
    	if(store.getCount()==0){
    		map = new AMap.Map('mapContainer',{
			resizeEnable: true,
			view: new AMap.View2D({
				center: new AMap.LngLat(116.397428, 39.90923),
				zoom: 13
			})
		});	
     		return;
     	}
     
			for(var i=0;i<store.getCount();i++)
			if(parseFloat(store.getAt(i).get('longitude'))&&parseFloat(store.getAt(i).get('latitude'))&&(parseFloat(store.getAt(i).get('longitude'))>73 && parseFloat(store.getAt(i).get('longitude'))<136)&&(parseFloat(store.getAt(i).get('latitude'))>3&&parseFloat(store.getAt(i).get('latitude'))<54))
			{
			
				if(maxlong==0){
					maxlong=parseFloat(store.getAt(i).get('longitude'));
				}
				if(minlong==0){
					minlong=parseFloat(store.getAt(i).get('longitude'));
				}
				if(maxlat==0){
					maxlat=parseFloat(store.getAt(i).get('latitude'));
				}
			
				if(minlat==0){
					minlat=parseFloat(store.getAt(i).get('latitude'));
				}
				if(maxlong<parseFloat(store.getAt(i).get('longitude'))){
					maxlong=parseFloat(store.getAt(i).get('longitude'));
				}
			
				if(maxlat<parseFloat(store.getAt(i).get('latitude'))){
					maxlat=parseFloat(store.getAt(i).get('latitude'));
				}
				if(minlong>parseFloat(store.getAt(i).get('longitude'))){
					minlong=parseFloat(store.getAt(i).get('longitude'));
				}
	
				if(minlat>parseFloat(store.getAt(i).get('latitude'))){
					minlat=parseFloat(store.getAt(i).get('latitude'));
				}
			}
     var latitude=(parseFloat(maxlat)+parseFloat(minlat))/2;
     var longitude=(parseFloat(maxlong)+parseFloat(minlong))/2;

        map = new AMap.Map("mapContainer",{
				resizeEnable: true,
				//二维地图显示视口
				view: new AMap.View2D({
				//地图中心点
				center:new AMap.LngLat(longitude, latitude),
				//地图显示的缩放级别
					zoom:10
				}),
				continuousZoomEnable:false
			});	

 
     	for(i=0;i<markers.length;i++){
     		markers[i].setMap(null);
     	}

     markers=[];
     var lineArr = new Array(); 
     for(var i=0;i<store.getCount();i++)
     if(parseFloat(store.getAt(i).get('longitude'))&&parseFloat(store.getAt(i).get('latitude'))&&(parseFloat(store.getAt(i).get('longitude'))>73 && parseFloat(store.getAt(i).get('longitude'))<136)&&(parseFloat(store.getAt(i).get('latitude'))>3&&parseFloat(store.getAt(i).get('latitude'))<54))
     {  		
     	  addMarker(store.getAt(i).get('address'),store.getAt(i).get('address'),parseFloat(store.getAt(i).get('longitude')), parseFloat(store.getAt(i).get('latitude')),i ,store.getCount()); 
     	  lineArr.push(new AMap.LngLat(parseFloat(store.getAt(i).get('longitude')), parseFloat(store.getAt(i).get('latitude')))); 
     	   	
     }
    
     if(polyline){
      polyline.setMap(null);
    }

      polyline = new AMap.Polyline({
				map:map,
				path:lineArr,
				strokeColor:"#F00",//线颜色
				strokeOpacity:1,//线透明度
				strokeWeight:3,//线宽
				strokeStyle:"solid"//线样式
			});
			//if(flag==0) 
     map.setFitView();
     //flag=1;
     if(sssmarker )
     sssmarker.setMap(null);
     sssmarker = new AMap.Marker({
				map:map,
				//draggable:true, //是否可拖动
				position:new AMap.LngLat(parseFloat(store.getAt(0).get('longitude')),parseFloat(store.getAt(0).get('latitude'))),//基点位置
				icon:"http://code.mapabc.com/images/car_03.png", //marker图标，直接传递地址url
				offset:new AMap.Pixel(-26,-13), //相对于基点的位置
				autoRotation:true
			});
				sssmarker.moveAlong(lineArr,2000);
    }
  }
	);
	
 }

	Ext.onReady(function(){
    Ext.tip.QuickTipManager.init();
    Ext.define('EimData', {
        extend: 'Ext.data.Model',
        fields: [
            'address', 'longitude', 'latitude'
        ],
        idProperty: 'sdate'
    });

       store = Ext.create('Ext.data.Store', {
        pageSize: 40,
        model: 'EimData',
        remoteSort: true,
        proxy: {
            type: 'ajax',
            url: '/pronline/Msg?FunName@dm_track',
//              
            reader: {
                type:'json',
                root: 'eimdata',
                totalProperty: 'totalCount'
            },         
            simpleSortMode: true
        },
        sorters: [{
      //      property: 'id',
     //       direction: 'DESC'
        }]
    });
    
     var placeCombo = Ext.create('Ext.form.field.ComboBox', {
     	  fieldLabel:'分析对象',
        labelWidth: 60,
        width:160,
        valueField:'value',
        displayField: 'name',
        id:'places',
        name : 'places',      
        value:'0',
        allowBlank: true,
        forceSelection: false,
                                    store: Ext.create('Ext.data.Store', {
                                    fields : ['name', 'value'],
                                    data   : [
                                        {name : '指定终端',   value: '0'},
                                        {name : '指定采集设备',   value: '1'}
                                        
                                                                
                                    ]
                                })
                                ,
        queryMode: 'local',
        typeAhead: true,
                listeners: {
                      'change':function(){
                      reflash();
                        }
                    }
        });
         var timeCombo = Ext.create('Ext.form.field.ComboBox', {
         	fieldLabel:'指定时间',
        labelWidth: 60,
        width:160,
        valueField:'value',
        displayField: 'name',
        id:'times',
        name : 'times',      
        value:'0',
        allowBlank: true,
        forceSelection: false,
         store: Ext.create('Ext.data.Store', {
           fields : ['name', 'value'],
            data   : [
            {name : '今天',   value: '0'},
            {name : '前三天',   value: '1'},
            {name : '前一周',   value: '2'},
            {name : '前一月',   value: '3'},
            {name : '前三月',   value: '4'},
            {name : '前半年',   value: '5'}                           
                                    ]
                                })
                                ,
        queryMode: 'local',
        typeAhead: true,
                listeners: {
                      'change':function(){
                      	
                        }
                    }
        });

        var tbar = Ext.create('Ext.Toolbar',{
            
            items:[
               placeCombo,'  ',
               timeCombo,'   ',
                {
                    xtype:'textfield',
                    id:'keyword',
                    width:250,
                    name:'keyword',
                    style:'color:#7aa7d5', 
                    value:'',      
                    //00-00-AD-0D-98-07     
                    emptyText:'请输入MAC信息，格式XX-XX-XX-XX-XX-XX',
                    enableKeyEvents:true,
                    listeners:{
                        'focus':function(){
                        },           
                        'keydown' : function(i,e){
                             var aae=e.getKey() ; 
                             if(aae==13){
                             }
                         }
                    }
                },'  ',
                {
                    text:'查询',
                    iconCls:'accept',
                    handler:function()
                    {
                    
                    	reflash();
                    	
                    }
                },
                '-',
               
             {
			     	 	text:'导出',
			     	 	
			     	 	iconCls:'exp',
			     	 	handler:function()
                    {
                    
                    	var form1 = document.getElementById('form1');
        
                      form1.mac.value =  Ext.getCmp('keyword').value;
                      form1.time_flag.value = Ext.getCmp('times').value;
                      form1.styles.value =  Ext.getCmp('places').value;

                    form1.exp.value='exp';
                        form1.submit();
                      form1.exp.value=""; 
                    	
                    }
			     	 },
                {xtype:'label', html:'<span id="titledx"></span>'}
            ]
        });

       var panel = Ext.create('Ext.form.FormPanel', {
        title: '',
        margins: '0 0 0 0',
        id:'myform',
        name:'myform',
        autoScroll: false,
        renderTo: 'mapleft',
        frame: true,
        tbar:tbar
 
    });

     
    
 
});
	
	
	
	
	</script>
<body>
	<div id="mapleft"></div>
	<div id="mapContainer"></div>
	<script type="text/javascript" src="http://webapi.amap.com/maps?v=1.3&key=9ac2d10856d92017d2d8d82ce004a820"></script>
	
	<script type="text/javascript">
	
	

		
	
		//初始化地图对象，加载地图
	
var map = new AMap.Map('mapContainer',{
			resizeEnable: true,
			//二维地图显示视口
	        //设置地图中心点
	        //设置地图显示的缩放级别
			view: new AMap.View2D({
				center: new AMap.LngLat(121.48, 31.22),
				zoom: 13
			})
		});	
		map.setFitView(); 
		  
	</script>
	
<form name="form1" id="form1" action="/pronline/Msg">
        <input type="hidden" name="FunName" value="dm_track">
        <input type="hidden" name="styles" value="">
        <input type="hidden" name="time_flag" value="">
        <input type="hidden" name="mac" value="">
        <input type="hidden" name="exp" value="">
     
	</form>
</body >
</html>						
 

